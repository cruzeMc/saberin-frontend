@page "/viewcontact/{id:int}"
@using ClassLibrary1.DTOs
@using ClassLibrary1.Services
@inject IContactService contactService
@inject NavigationManager NavigationManager

<div class="container my-5">
    @if (isLoading)
    {
        <div class="d-flex justify-content-center">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else if (contact == null)
    {
        <div class="alert alert-danger text-center">
            <h5>Contact not found</h5>
            <button class="btn btn-outline-secondary mt-3" @onclick="BackToContacts">Back to Contacts</button>
        </div>
    }
    else
    {
        <div class="card shadow-lg">
            <div class="card-header bg-primary text-white">
                <h3 class="mb-0">@contact.FirstName @contact.LastName</h3>
            </div>
            <div class="card-body">
                <h5 class="card-title">Contact Information</h5>
                @if (contact.Addresses?.Any() == true)
                {
                    <div class="row">
                        @foreach (var addr in contact.Addresses)
                        {
                            <div class="col-md-6">
                                <div class="card mb-3">
                                    <div class="card-body">
                                        <h6 class="card-subtitle mb-2 text-muted">Address</h6>
                                        <p class="card-text">
                                            <strong>Street:</strong> @addr.Street<br/>
                                            <strong>City:</strong> @addr.City<br/>
                                            <strong>State:</strong> @addr.State<br/>
                                            <strong>ZIP:</strong> @addr.ZipCode
                                        </p>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <p>No addresses available.</p>
                }
            </div>
            <div class="card-footer text-end">
                <button class="btn btn-outline-secondary" @onclick="BackToContacts">
                    Back to Contacts
                </button>
            </div>
        </div>
    }
</div>

@code {
    [Parameter] public int id { get; set; }

    private ContactDTO contact;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadContact();
    }

    protected override async Task OnParametersSetAsync()
    {
        await LoadContact();
    }

    private async Task LoadContact()
    {
        isLoading = true;
        contact = await contactService.GetContactByIdAsync(id);
        isLoading = false;
    }

    private void BackToContacts()
    {
        NavigationManager.NavigateTo("/contacts");
    }
}