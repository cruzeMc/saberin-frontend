@page "/editcontact/{id:int}"
@using BlazorApp2.Services
@using ClassLibrary1.DTOs
@inject ContactService contactService
@inject NavigationManager NavigationManager

<div class="container my-5">
    <div class="card shadow">
        <div class="card-header bg-warning text-white">
            <h3 class="mb-0">Edit Contact</h3>
        </div>
        <div class="card-body">
            @if (contact == null)
            {
                <div class="d-flex justify-content-center">
                    <div class="spinner-border text-warning" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                </div>
            }
            else
            {
                <EditForm Model="contact" OnValidSubmit="HandleValidSubmit">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="firstName" class="form-label">First Name</label>
                            <InputText id="firstName" class="form-control" @bind-Value="contact.FirstName" />
                        </div>
                        <div class="col-md-6">
                            <label for="lastName" class="form-label">Last Name</label>
                            <InputText id="lastName" class="form-control" @bind-Value="contact.LastName" />
                        </div>
                    </div>

                    <h5 class="mt-4">Address</h5>
                    @if (contact.Addresses != null && contact.Addresses.Any())
                    {
                        var addr = contact.Addresses.First();
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="street" class="form-label">Street</label>
                                <InputText id="street" class="form-control" @bind-Value="addr.Street" />
                            </div>
                            <div class="col-md-6">
                                <label for="city" class="form-label">City</label>
                                <InputText id="city" class="form-control" @bind-Value="addr.City" />
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label for="state" class="form-label">State</label>
                                <InputText id="state" class="form-control" @bind-Value="addr.State" />
                            </div>
                            <div class="col-md-6">
                                <label for="zip" class="form-label">ZIP Code</label>
                                <InputText id="zip" class="form-control" @bind-Value="addr.ZipCode" />
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-info">
                            No address available. Please add an address via the Create Contact page.
                        </div>
                    }

                    <div class="d-flex justify-content-end mt-4">
                        <button type="button" class="btn btn-secondary me-2" @onclick="BackToContacts">
                            Cancel
                        </button>
                        <button type="submit" class="btn btn-warning">
                            Save Changes
                        </button>
                    </div>
                </EditForm>
            }
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int id { get; set; }

    private ContactDTO contact;

    protected override async Task OnInitializedAsync()
    {
        contact = await contactService.GetContactById(id);
    }

    private async Task HandleValidSubmit()
    {
        var response = await contactService.UpdateContact(contact.Id, contact);
        if (response.IsSuccessStatusCode)
        {
            NavigationManager.NavigateTo("/contacts");
        }
        else
        {
            // Optionally display an error message here
        }
    }

    private void BackToContacts()
    {
        NavigationManager.NavigateTo("/contacts");
    }
}
